

server.port=8087

spring.datasource.name=postgres
spring.datasource.url=jdbc:postgresql://${PROD_DB_HOST}:${PROD_DB_PORT}/${PROD_DB_NAME}
spring.datasource.username=${PROD_DB_USERNAME}
spring.datasource.password=${PROD_DB_PASSWORD}


#spring.flyway.baseline-on-migrate=true
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=validate

#logging.level.org.hibernate.SQL=DEBUG


#Flyway properties
#spring.flyway.enabled=true
#spring.flyway.url=jdbc:postgresql://localhost:5432/hr_system
#spring.flyway.password=1234
#spring.flyway.user=postgres
#spring.flyway.schemas=migrations
#spring.flyway.locations=classpath:db/migration

spring.mail.host=smtp.gmail.com
spring.mail.username=devsfactoryBack@gmail.com
spring.mail.port=587
spring.mail.password=rntsmknqirvmtymq
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB

aws.s3.bucket=tax-ventures-bucket
aws.s3.bucket.uploaded.folder=uploaded/
spring.security.oauth2.client.registration.google.client-id=1052442301706-e7nm3vhii9kkjsjjsptm1ctn9fbjqop5.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=openid,email,profile
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.provider.google.issuer-uri=https://accounts.google.com

# application.properties
#cloud.aws.credentials.profile-name=raiymAws
# AWS config
#aws.s3.bucket=java-spring-bucket-devsfactory

# AWS S3 configuration

# AWS S3 configuration



